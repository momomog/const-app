{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","components/pages/EnterTime/EnterTime.module.css","components/pages/EnterTime/EnterTime.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","_props$component","component","Component","_props$square","square","_props$elevation","_props$variant","variant","outlined","concat","rounded","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","CardContent","padding","paddingBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","capitalize","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","module","exports","interval","EnterTime","useState","Date","now","currentTime","setCurrentTime","enterTime","useContext","AppContext","useEffect","window","setInterval","clearInterval","useMemo","diff","secs","Math","floor","mins","hours","getDate","minutes","seconds","styles","wrapper","title","timerContent","timer"],"mappings":"+HAAA,wDAaIA,EAAoBC,cAAiB,SAAcC,EAAOC,GAC5D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBC,EAAgBJ,EAAMK,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBS,IAAOC,YAAS,CACtDN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BS,UAAWP,EAAS,EAAI,EACxBJ,IAAKA,GACJK,OA6BUO,gBA9CK,CAElBF,KAAM,CACJG,SAAU,WA2CoB,CAChCC,KAAM,WADOF,CAEZf,I,gCCvDH,gDAiCIU,EAAqBT,cAAiB,SAAeC,EAAOC,GAC9D,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBa,EAAmBhB,EAAMiB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAgBnB,EAAMoB,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBrB,EAAMY,UACzBA,OAAiC,IAArBS,EAA8B,EAAIA,EAC9CC,EAAiBtB,EAAMuB,QACvBA,OAA6B,IAAnBD,EAA4B,YAAcA,EACpDhB,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,YAAa,SAAU,YAAa,YAEzG,OAAoBD,gBAAoBmB,EAAWT,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,EAAuB,aAAZoB,EAAyBrB,EAAQsB,SAAWtB,EAAQ,YAAYuB,OAAOb,KAAcQ,GAAUlB,EAAQwB,SAChJzB,IAAKA,GACJK,OA6DUO,iBAvGK,SAAgBc,GAClC,IAAIC,EAAa,GAMjB,OALAD,EAAME,QAAQC,SAAQ,SAAUC,EAAQC,GACtCJ,EAAW,YAAYH,OAAOO,IAAU,CACtCC,UAAWF,MAGRtB,YAAS,CAEdE,KAAM,CACJuB,gBAAiBP,EAAMQ,QAAQC,WAAWC,MAC1CC,MAAOX,EAAMQ,QAAQI,KAAKC,QAC1BC,WAAYd,EAAMe,YAAYC,OAAO,eAIvCjB,QAAS,CACPkB,aAAcjB,EAAMkB,MAAMD,cAI5BpB,SAAU,CACRsB,OAAQ,aAAarB,OAAOE,EAAMQ,QAAQY,WAE3CnB,KA+E6B,CAChCb,KAAM,YADOF,CAEZL,I,gCChHH,gDAeIwC,EAA2BjD,cAAiB,SAAqBC,EAAOC,GAC1E,IAAIC,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClBa,EAAmBhB,EAAMiB,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDV,EAAQC,YAAyBP,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBmB,EAAWT,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,GAC9BF,IAAKA,GACJK,OAgCUO,gBAnDK,CAElBF,KAAM,CACJsC,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCnC,KAAM,kBADOF,CAEZmC,I,gCC3DH,wDA2IIG,EAAwB,CAC1BC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,UAAW,KACXC,UAAW,KACXC,MAAO,IACPC,MAAO,KAELC,EAA0B/D,cAAiB,SAAoBC,EAAOC,GACxE,IAAI8D,EAAe/D,EAAMgE,MACrBA,OAAyB,IAAjBD,EAA0B,UAAYA,EAC9C7D,EAAUF,EAAME,QAChBC,EAAYH,EAAMG,UAClB8D,EAAejE,EAAMsC,MACrBA,OAAyB,IAAjB2B,EAA0B,UAAYA,EAC9ChD,EAAYjB,EAAMiB,UAClBiD,EAAiBlE,EAAMmE,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAsBpE,EAAMqE,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAgBtE,EAAMuE,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAmBxE,EAAMyE,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDlD,EAAiBtB,EAAMuB,QACvBA,OAA6B,IAAnBD,EAA4B,QAAUA,EAChDoD,EAAwB1E,EAAM2E,eAC9BA,OAA2C,IAA1BD,EAAmCvB,EAAwBuB,EAC5EpE,EAAQC,YAAyBP,EAAO,CAAC,QAAS,UAAW,YAAa,QAAS,YAAa,UAAW,eAAgB,SAAU,YAAa,UAAW,mBAE7JkB,EAAYD,IAAcwD,EAAY,IAAME,EAAepD,IAAY4B,EAAsB5B,KAAa,OAC9G,OAAoBxB,gBAAoBmB,EAAWT,YAAS,CAC1DN,UAAWO,YAAKR,EAAQS,KAAMR,EAAuB,YAAZoB,GAAyBrB,EAAQqB,GAAoB,YAAVe,GAAuBpC,EAAQ,QAAQuB,OAAOmD,YAAWtC,KAAUiC,GAAUrE,EAAQqE,OAAQF,GAAgBnE,EAAQmE,aAAcI,GAAavE,EAAQuE,UAAqB,YAAVT,GAAuB9D,EAAQ,QAAQuB,OAAOmD,YAAWZ,KAAsB,YAAZG,GAAyBjE,EAAQ,UAAUuB,OAAOmD,YAAWT,MACvXlE,IAAKA,GACJK,OA0EUO,iBApPK,SAAgBc,GAClC,MAAO,CAELhB,KAAM,CACJkE,OAAQ,GAIVhB,MAAOlC,EAAMmD,WAAWjB,MAGxBD,MAAOjC,EAAMmD,WAAWlB,MAGxBmB,QAASpD,EAAMmD,WAAWC,QAG1BC,OAAQrD,EAAMmD,WAAWE,OAGzB5B,GAAIzB,EAAMmD,WAAW1B,GAGrBC,GAAI1B,EAAMmD,WAAWzB,GAGrBC,GAAI3B,EAAMmD,WAAWxB,GAGrBC,GAAI5B,EAAMmD,WAAWvB,GAGrBC,GAAI7B,EAAMmD,WAAWtB,GAGrBC,GAAI9B,EAAMmD,WAAWrB,GAGrBC,UAAW/B,EAAMmD,WAAWpB,UAG5BC,UAAWhC,EAAMmD,WAAWnB,UAG5BsB,SAAUtD,EAAMmD,WAAWG,SAG3BC,OAAQ,CACNC,SAAU,WACVC,OAAQ,EACRC,MAAO,EACPvE,SAAU,UAIZwE,UAAW,CACTC,UAAW,QAIbC,YAAa,CACXD,UAAW,UAIbE,WAAY,CACVF,UAAW,SAIbG,aAAc,CACZH,UAAW,WAIbhB,OAAQ,CACNzD,SAAU,SACV6E,aAAc,WACdC,WAAY,UAIdvB,aAAc,CACZwB,aAAc,UAIhBpB,UAAW,CACToB,aAAc,IAIhBC,aAAc,CACZxD,MAAO,WAITyD,aAAc,CACZzD,MAAOX,EAAMQ,QAAQK,QAAQwD,MAI/BC,eAAgB,CACd3D,MAAOX,EAAMQ,QAAQ+D,UAAUF,MAIjCG,iBAAkB,CAChB7D,MAAOX,EAAMQ,QAAQI,KAAKC,SAI5B4D,mBAAoB,CAClB9D,MAAOX,EAAMQ,QAAQI,KAAK2D,WAI5BG,WAAY,CACV/D,MAAOX,EAAMQ,QAAQmE,MAAMN,MAI7BO,cAAe,CACbpC,QAAS,UAIXqC,aAAc,CACZrC,QAAS,YAoHmB,CAChCpD,KAAM,iBADOF,CAEZiD,I,mBC5PH2C,EAAOC,QAAU,CAAC,QAAU,2BAA2B,aAAe,gCAAgC,MAAQ,yBAAyB,MAAQ,2B,2CCM3IC,E,yEAmCWC,UAjCa,WAAO,IAAD,EACQC,mBAAiBC,KAAKC,OAD9B,mBACvBC,EADuB,KACVC,EADU,KAEvBC,EAAuBC,qBAAWC,KAAlCF,UAEPG,qBAAU,WAEN,OADAV,EAAWW,OAAOC,aAAY,kBAAMN,EAAeH,KAAKC,SAAQ,KACzD,kBAAMS,cAAcb,MAC5B,IAP2B,MASIc,mBAAQ,WACtC,OA0BR,SAAiBP,EAAmBF,GAChC,IAAMU,EAAOV,EAAcE,EACvBS,EAAOC,KAAKC,MAAOH,EAAO,IAAQ,IAClCI,EAAOF,KAAKC,MAAOH,EAAI,IAAkB,IACzCK,EAAQH,KAAKC,MAAOH,EAAI,KAAuB,IAEnD,MAAO,CACHK,EAAQ,EAAIA,EAAZ,WAAwBA,GACxBD,EAAO,EAAIA,EAAX,WAAsBA,GACtBH,EAAO,EAAIA,EAAX,WAAsBA,IAnCfK,CAAQd,EAAWF,KAC3B,CAACE,EAAWF,IAXe,mBASvBe,EATuB,KAShBE,EATgB,KASPC,EATO,KAa9B,OACI,yBAAK/H,UAAWgI,IAAOC,SACnB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYjI,UAAWgI,IAAOE,MAAO/F,MAAM,gBAAgB+B,cAAY,GAAvE,wCAGA,6BACA,yBAAKlE,UAAWgI,IAAOG,cACnB,4MACA,yBAAKnI,UAAWgI,IAAOI,OAAvB,UACQR,EADR,cACmBE,EADnB,cACgCC","file":"static/js/3.30e02e5f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EnterTime_wrapper__2CCjV\",\"timerContent\":\"EnterTime_timerContent__2PfCh\",\"timer\":\"EnterTime_timer__2yTxY\",\"title\":\"EnterTime_title__12Hbv\"};","import React, {useContext, useEffect, useMemo, useState} from 'react'\r\nimport {AppState} from '../../../reducers/appReducer'\r\nimport {AppContext} from '../../AppWrapper'\r\nimport {Card, CardContent, Typography} from '@material-ui/core'\r\n\r\nimport styles from './EnterTime.module.css'\r\n\r\nlet interval: number\r\n\r\nconst EnterTime: React.FC = () => {\r\n    const [currentTime, setCurrentTime] = useState<number>(Date.now())\r\n    const {enterTime}: AppState = useContext(AppContext)\r\n\r\n    useEffect(() => {\r\n        interval = window.setInterval(() => setCurrentTime(Date.now()), 1000)\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    const [hours, minutes, seconds] = useMemo(() => {\r\n        return getDate(enterTime, currentTime)\r\n    }, [enterTime, currentTime])\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Card>\r\n                <CardContent>\r\n                    <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                        Таймер\r\n                    </Typography>\r\n                    <hr/>\r\n                    <div className={styles.timerContent}>\r\n                        <h3>Со времени открытия сайта прошло</h3>\r\n                        <div className={styles.timer}>\r\n                            {`${hours} : ${minutes} : ${seconds}`}\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EnterTime\r\n\r\n\r\nfunction getDate(enterTime: number, currentTime: number): Array<string | number> {\r\n    const diff = currentTime - enterTime,\r\n        secs = Math.floor((diff / 1000) % 60),\r\n        mins = Math.floor((diff / (1000 * 60)) % 60),\r\n        hours = Math.floor((diff / (1000 * 60 * 60)) % 24)\r\n\r\n    return [\r\n        hours > 9 ? hours : `0${hours}`,\r\n        mins > 9 ? mins : `0${mins}`,\r\n        secs > 9 ? secs : `0${secs}`\r\n    ]\r\n}"],"sourceRoot":""}