{"version":3,"sources":["components/pages/EnterTime/EnterTime.tsx","components/pages/EnterTime/EnterTime.module.css"],"names":["EnterTime","useState","Date","now","currentTime","setCurrentTime","enterTime","useContext","AppContext","interval","useRef","useEffect","current","window","setInterval","clearInterval","temp","moment","duration","hours","mins","minutes","secs","seconds","getVisitedTime","className","styles","title","color","gutterBottom","timerContent","timer","module","exports"],"mappings":"qOAyCeA,UA9Ba,WAAO,IAAD,EACQC,mBAAiBC,KAAKC,OAD9B,mBACvBC,EADuB,KACVC,EADU,KAEvBC,EAAuBC,qBAAWC,KAAlCF,UACHG,EAAWC,iBAAe,GAE9BC,qBAAU,WAEN,OADAF,EAASG,QAAUC,OAAOC,aAAY,kBAAMT,EAAeH,KAAKC,SAAQ,KACjE,kBAAMY,cAAcN,EAASG,YACrC,IAR2B,MAiClC,SAAwBN,EAAmBF,GACvC,IAAMY,EAAOC,IAAOC,SAASd,EAAcE,GACvCa,EAAQH,EAAKG,QACbC,EAAOJ,EAAKK,UACZC,EAAON,EAAKO,UAEhB,MAAO,CACHJ,EAAQ,EAAIA,EAAZ,WAAwBA,GACxBC,EAAO,EAAIA,EAAX,WAAsBA,GACtBE,EAAO,EAAIA,EAAX,WAAsBA,IAhCQE,CAAelB,EAAWF,GAV9B,mBAUvBe,EAVuB,KAUhBE,EAVgB,KAUPE,EAVO,KAY9B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYE,UAAWC,IAAOC,MAAOC,MAAM,gBAAgBC,cAAY,GAAvE,wCAGA,6BACA,yBAAKJ,UAAWC,IAAOI,cACnB,4MACA,yBAAKL,UAAWC,IAAOK,OAAvB,UACQZ,EADR,cACmBE,EADnB,cACgCE,S,mBChCpDS,EAAOC,QAAU,CAAC,aAAe,gCAAgC,MAAQ,yBAAyB,MAAQ","file":"static/js/7.ac437d32.chunk.js","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react'\r\nimport {AppState} from '../../../reducers/appReducer'\r\nimport {AppContext} from '../../AppWrapper'\r\nimport {Card, CardContent, Typography} from '@material-ui/core'\r\nimport moment from 'moment'\r\nimport styles from './EnterTime.module.css'\r\n\r\n/*\r\n * Время нахождения пользователя на сайте.\r\n * PS. После перезагрузки страницы время будет слетать\r\n */\r\nconst EnterTime: React.FC = () => {\r\n    const [currentTime, setCurrentTime] = useState<number>(Date.now())\r\n    const {enterTime}: AppState = useContext(AppContext)\r\n    let interval = useRef<number>(0)\r\n\r\n    useEffect(() => {\r\n        interval.current = window.setInterval(() => setCurrentTime(Date.now()), 1000)\r\n        return () => clearInterval(interval.current)\r\n    }, [])\r\n\r\n    const [hours, minutes, seconds] = getVisitedTime(enterTime, currentTime)\r\n\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n                <Typography className={styles.title} color=\"textSecondary\" gutterBottom>\r\n                    Таймер\r\n                </Typography>\r\n                <hr/>\r\n                <div className={styles.timerContent}>\r\n                    <h3>Со времени открытия сайта прошло</h3>\r\n                    <div className={styles.timer}>\r\n                        {`${hours} : ${minutes} : ${seconds}`}\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EnterTime\r\n\r\n\r\nfunction getVisitedTime(enterTime: number, currentTime: number): Array<string | number> {\r\n    const temp = moment.duration(currentTime - enterTime),\r\n        hours = temp.hours(),\r\n        mins = temp.minutes(),\r\n        secs = temp.seconds()\r\n\r\n    return [\r\n        hours > 9 ? hours : `0${hours}`,\r\n        mins > 9 ? mins : `0${mins}`,\r\n        secs > 9 ? secs : `0${secs}`\r\n    ]\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContent\":\"EnterTime_timerContent__2ZaxT\",\"timer\":\"EnterTime_timer__2Hjgt\",\"title\":\"EnterTime_title__3HGKo\"};"],"sourceRoot":""}